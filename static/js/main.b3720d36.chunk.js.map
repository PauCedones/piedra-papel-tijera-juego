{"version":3,"sources":["components/Score.js","components/Header.js","components/Wrapper.js","components/Token.js","components/Button.js","components/Table.js","components/Rules.js","App.js","serviceWorker.js","index.js"],"names":["ScoreStyled","styled","div","Score","score","useContext","ScoreContext","HeaderStyled","Header","WrappedStyled","Wrapper","children","shadow","keyframes","box","TokenStyled","name","color","base","border","isShadowAnimated","playing","colors","paper","rock","scissors","default","Token","onClick","className","src","alt","ButtonStyled","WhiteButton","Button","props","TableStyled","results","elements","Table","useState","result","setResult","setPlaying","pick","setPick","housePick","setHousePick","setScore","setIwon","launchHousePick","Promise","resolve","reject","interval","setInterval","min","max","Math","floor","random","setTimeout","clearInterval","a","house","playWithIA","RulesStyled","visible","Rules","setVisible","handleToggleClick","createContext","AppStyled","main","App","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3720d36.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ScoreContext } from \"../App\";\r\n\r\nconst ScoreStyled = styled.div`\r\n  background: white;\r\n  text-align: center;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  width: 80px;\r\n  small {\r\n    color: #2a45c2;\r\n    text-transform: uppercase;\r\n    font-size: 10px;\r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n  }\r\n  p {\r\n    color: #565468;\r\n    font-size: 40px;\r\n    margin: 0;\r\n    font-weight: 700;\r\n    position: relative;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    padding: 10px 20px;\r\n    small {\r\n      font-size: 16px;\r\n    }\r\n    p {\r\n      font-size: 60px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Score() {\r\n  const { score } = useContext(ScoreContext);\r\n  return (\r\n    <ScoreStyled>\r\n      <small>Score</small>\r\n      <p>{score}</p>\r\n    </ScoreStyled>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Score from \"./Score.js\";\r\n\r\nconst HeaderStyled = styled.div`\r\n  color: white;\r\n  padding: 12px 12px 12px 23px;\r\n  border-radius: 0.5em;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: 3px solid rgba(255, 255, 255, 0.29);\r\n  h1 {\r\n    font-size: 18px;\r\n    line-height: 16px;\r\n    font-weight: 700;\r\n    margin: 0;\r\n    text-transform: uppercase;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    padding: 24px;\r\n    h1 {\r\n      font-size: 36px;\r\n      line-height: 0.9;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderStyled>\r\n      <h1>\r\n        Rock <br /> Paper <br /> Scissors\r\n      </h1>\r\n      <Score />\r\n    </HeaderStyled>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WrappedStyled = styled.div`\r\n  max-width: 700px;\r\n  margin: auto;\r\n`;\r\n\r\nfunction Wrapper({ children }) {\r\n  return <WrappedStyled>{children}</WrappedStyled>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst shadow = keyframes`\r\n  to {\r\n    box-shadow: 0 0 0 40px rgba(255,255,255,.04), 0 0 0 80px rgba(255,255,255,.04), 0 0 0 120px rgba(255,255,255,.02);\r\n    transform:  scale(1.1);\r\n  }\r\n`;\r\nconst box = keyframes`\r\n  to {\r\n    transform: rotateY(360deg);\r\n  }\r\n`;\r\n\r\nconst TokenStyled = styled.div`\r\n  width: 130px;\r\n  height: 125px;\r\n  padding: ${({ name }) => (name === \"default\" ? \"16px\" : \"0\")};\r\n  border: 16px solid ${({ color }) => color.base};\r\n  box-sizing: border-box;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  box-shadow: 0 5px 0 ${({ color }) => color.border};\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 2;\r\n  ${({ isShadowAnimated }) =>\r\n    isShadowAnimated &&\r\n    \"box-shadow: 0 0 0 0px rgba(255,255,255,.04), 0 0 0 0px rgba(255,255,255,.04), 0 0 0 0px rgba(255,255,255,.02);\"}\r\n  animation: 1s ${({ isShadowAnimated }) =>\r\n    isShadowAnimated ? shadow : \"\"} forwards;\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n  .box {\r\n    background: ${({ name }) => (name === \"default\" ? \"#122343\" : \"white\")};\r\n    box-shadow: 0 -4px 0 ${({ name }) => (name === \"default\" ? \"transparent\" : \"#BABFD4\")};\r\n    flex: 1;\r\n    align-self: stretch;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    img {\r\n      width: 40%;\r\n      animation: 1s ${({ isShadowAnimated }) => (isShadowAnimated ? box : \"\")};\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    ${({ playing }) =>\r\n      playing\r\n        ? \"width: 300px; height: 295px; border-width: 32px;\"\r\n        : \"width: 200px; height: 195px;\"}\r\n  }\r\n`;\r\nconst colors = {\r\n  paper: {\r\n    base: \"#516ef4\",\r\n    border: \"#2543c3\",\r\n  },\r\n  rock: {\r\n    base: \"#de3a5a\",\r\n    border: \"#980e31\",\r\n  },\r\n  scissors: {\r\n    base: \"#eca81e\",\r\n    border: \"#c76c14\",\r\n  },\r\n  default: {\r\n    base: \"transparent\",\r\n    border: \"transparent\",\r\n  },\r\n};\r\n\r\nfunction Token({ name = \"default\", onClick, isShadowAnimated = false }) {\r\n  function handleClick() {\r\n    if (onClick) {\r\n      onClick(name);\r\n    }\r\n  }\r\n  const color = colors[name];\r\n  return (\r\n    <TokenStyled\r\n      color={color}\r\n      onClick={handleClick}\r\n      name={name}\r\n      isShadowAnimated={isShadowAnimated}\r\n    >\r\n      <div className=\"box\">\r\n        <img src={`./images/icon-${name}.svg`} alt=\"\" />\r\n      </div>\r\n    </TokenStyled>\r\n  );\r\n}\r\n\r\nexport default Token;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonStyled = styled.div`\r\n  display: inline-flex;\r\n  border: 1px solid white;\r\n  border-radius: 0.5em;\r\n  min-width: 128px;\r\n  padding: 0.7em;\r\n  box-sizing: border-box;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  letter-spacing: 2.5px;\r\n`;\r\n\r\nfunction Button({ children, ...props }) {\r\n  return <ButtonStyled {...props}>{children}</ButtonStyled>;\r\n}\r\n\r\nexport const WhiteButton = styled(ButtonStyled)`\r\n  background: white;\r\n  color: #101a3f;\r\n  min-width: 220px;\r\n`;\r\nexport default Button;\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Token from \"./Token.js\";\r\nimport { WhiteButton } from \"./Button\";\r\nimport { ScoreContext } from \"../App.js\";\r\n\r\nconst TableStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 130px 130px;\r\n  justify-content: center;\r\n  justify-items: center;\r\n  grid-gap: 30px 50px;\r\n  margin: 2em 0;\r\n  position: relative;\r\n  & div:nth-of-type(3) {\r\n    grid-column: span 2;\r\n  }\r\n  .in-game {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-size: 0.8em;\r\n    font-weight: 700;\r\n    letter-spacing: 1px;\r\n  }\r\n  .results {\r\n    text-align: center;\r\n    h2 {\r\n      text-transform: uppercase;\r\n      font-size: 56px;\r\n      margin: 10px;\r\n    }\r\n  }\r\n  .line {\r\n    display: ${({ playing }) => (!playing ? \"block\" : \"none\")};\r\n    height: 14px;\r\n    background: rgba(0, 0, 0, 0.2);\r\n    position: absolute;\r\n    width: 200px;\r\n    top: 58px;\r\n    &:before {\r\n      content: \"\";\r\n      height: 14px;\r\n      background: rgba(0, 0, 0, 0.2);\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      transform: rotate(60deg);\r\n      transform-origin: left top;\r\n    }\r\n    &:after {\r\n      content: \"\";\r\n      height: 14px;\r\n      background: rgba(0, 0, 0, 0.2);\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      transform: rotate(-60deg);\r\n      transform-origin: right top;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    grid-template-columns: 300px 300px;\r\n    ${({ playing, results }) =>\r\n      playing && results && \"grid-template-columns: 300px 110px 110px 300px;\"}\r\n    & div:nth-of-type(3) {\r\n      ${({ playing, results }) =>\r\n        playing && results && \"grid-column: 2 / 4; grid-row: 1;\"}\r\n    }\r\n    .line {\r\n      width: 300px;\r\n    }\r\n    .results {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n    }\r\n    .in-game {\r\n      font-size: 1.2em;\r\n      display: flex;\r\n      flex-direction: column;\r\n      > div {\r\n        order: 2;\r\n      }\r\n      > p {\r\n        order: 1;\r\n        margin-bottom: 2em;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst elements = [\"paper\", \"scissors\", \"rock\"];\r\n\r\nfunction Table() {\r\n  const [result, setResult] = useState(\"\");\r\n  const [playing, setPlaying] = useState(false);\r\n  const [pick, setPick] = useState(\"\");\r\n  const [housePick, setHousePick] = useState(\"default\");\r\n  const { score, setScore } = useContext(ScoreContext);\r\n  const [iWon, setIwon] = useState(false);\r\n\r\n  function getRandom(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n  }\r\n  function launchHousePick() {\r\n    return new Promise((resolve, reject) => {\r\n      let pick;\r\n      const interval = setInterval(() => {\r\n        pick = elements[getRandom(0, 3)];\r\n        setHousePick(pick);\r\n      }, 75);\r\n\r\n      setTimeout(() => {\r\n        clearInterval(interval);\r\n        resolve(pick);\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  async function onClick(name) {\r\n    setPlaying(true);\r\n    setPick(name);\r\n    const house = await launchHousePick();\r\n    // console.log(house)\r\n    // console.log('la casa eligió ', house)\r\n    const results = playWithIA(name, house);\r\n    setResult(results);\r\n    if (results === \"win\") {\r\n      setScore(score + 1);\r\n      setIwon(true);\r\n    }\r\n  }\r\n  function playWithIA(pick, housePick) {\r\n    if (housePick === pick) {\r\n      return \"draw\";\r\n    }\r\n    if (pick === \"paper\") {\r\n      if (housePick === \"scissors\") {\r\n        return \"lose\";\r\n      }\r\n      if (housePick === \"rock\") {\r\n        return \"win\";\r\n      }\r\n    }\r\n    if (pick === \"scissors\") {\r\n      if (housePick === \"paper\") {\r\n        return \"win\";\r\n      }\r\n      if (housePick === \"rock\") {\r\n        return \"lose\";\r\n      }\r\n    }\r\n    if (pick === \"rock\") {\r\n      if (housePick === \"paper\") {\r\n        return \"lose\";\r\n      }\r\n      if (housePick === \"scissors\") {\r\n        return \"win\";\r\n      }\r\n    }\r\n  }\r\n  function handleTryAgainClick() {\r\n    setPlaying(false);\r\n    setResult(\"\");\r\n  }\r\n  return (\r\n    <TableStyled playing={playing}>\r\n      <span className=\"line\"></span>\r\n      {!playing ? (\r\n        <>\r\n          <Token name=\"paper\" onClick={onClick} />\r\n          <Token name=\"scissors\" onClick={onClick} />\r\n          <Token name=\"rock\" onClick={onClick} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"in-game\">\r\n            <Token name={pick} isShadowAnimated={result == \"win\"} />\r\n            <p>You picked</p>\r\n          </div>\r\n          <div className=\"in-game\">\r\n            <Token name={housePick} isShadowAnimated={result == \"lose\"} />\r\n            <p>the house picked</p>\r\n          </div>\r\n          <div className=\"results\">\r\n            {result && (\r\n              <>\r\n                <h2>YOU {result}</h2>\r\n                <WhiteButton onClick={handleTryAgainClick}>\r\n                  try again\r\n                </WhiteButton>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </TableStyled>\r\n  );\r\n}\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button.js\";\r\n\r\nconst RulesStyled = styled.div`\r\n  text-align: center;\r\n  &::before {\r\n    content: \"\";\r\n    display: ${({ visible }) => (visible ? \"block\" : \"none\")};\r\n    position: absolute;\r\n    z-index: 2;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n    background: rgba(0, 0, 0, 0.6);\r\n  }\r\n  .close-button {\r\n    margin-top: 2em;\r\n    cursor: pointer;\r\n  }\r\n  .rules-modal {\r\n    background: white;\r\n    padding: 4em 0;\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    z-index: 3;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    h2 {\r\n      color: #3b4262;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n      letter-spacing: -2px;\r\n      margin-bottom: 1em;\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    .button {\r\n      position: fixed;\r\n      right: 2em;\r\n      bottom: 2em;\r\n    }\r\n    .rules-modal {\r\n      width: 400px;\r\n      margin: auto;\r\n      border-radius: 10px;\r\n      top: 0;\r\n      bottom: initial;\r\n      transform: translateY(50%);\r\n      padding: 2em;\r\n      box-sizing: border-box;\r\n      h2 {\r\n        font-size: 32px;\r\n        align-self: flex-start;\r\n        margin: 0 0 1.2em 0;\r\n      }\r\n    }\r\n    .close-button {\r\n      position: absolute;\r\n      right: 2em;\r\n      top: 0.8em;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Rules() {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  function handleToggleClick() {\r\n    setVisible(!visible);\r\n  }\r\n  return (\r\n    <RulesStyled visible={visible}>\r\n      {visible && (\r\n        <div className=\"rules-modal\">\r\n          <h2> rules </h2>\r\n          <img src=\"./images/image-rules.svg\" alt=\"game rules\" />\r\n          <img\r\n            className=\"close-button\"\r\n            onClick={handleToggleClick}\r\n            src=\"./images/icon-close.svg\"\r\n            alt=\"close the game rules\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <Button onClick={handleToggleClick}>Rules</Button>\r\n    </RulesStyled>\r\n  );\r\n}\r\n\r\nexport default Rules;\r\n","import React, { createContext, useState } from \"react\";\r\nimport Header from \"./components/Header.js\";\r\nimport styled from \"styled-components\";\r\nimport Wrapper from \"./components/Wrapper.js\";\r\nimport Table from \"./components/Table.js\";\r\nimport Rules from \"./components/Rules.js\";\r\n\r\nexport const ScoreContext = createContext();\r\n\r\nconst AppStyled = styled.main`\r\n  background-image: radial-gradient(circle at top, #1f3757 20%, #131537 100%);\r\n  color: white;\r\n  font-family: \"Barlow Semi Condensed\", sans-serif;\r\n  .app-content {\r\n    padding: 2em;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [score, setScore] = useState(0);\r\n  return (\r\n    <ScoreContext.Provider\r\n      value={{\r\n        score,\r\n        setScore,\r\n      }}\r\n    >\r\n      <AppStyled>\r\n        <Wrapper>\r\n          <div className=\"app-content\">\r\n            <Header />\r\n            <Table />\r\n            <Rules />\r\n          </div>\r\n        </Wrapper>\r\n      </AppStyled>\r\n    </ScoreContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}